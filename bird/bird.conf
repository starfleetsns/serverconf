# Configure logging
#log syslog { debug, trace, info, remote, warning, error, auth, fatal, bug };
#log stderr all;
#log "tmp" all;

# Override router ID
include "routerid.conf";

# The direct protocol automatically generates device routes to
# all network interfaces. Can exist in as many instances as you wish
# if you want to populate multiple routing tables with device routes.
protocol direct {
	preference 100;
	interface "eth*", "etbr*", "br*";	# Restrict network interfaces it works with
	import all;
}

# This pseudo-protocol performs synchronization between BIRD's routing
# tables and the kernel. If your kernel supports multiple routing tables
# (as Linux 2.2.x does), you can run multiple instances of the kernel
# protocol and synchronize different kernel tables with different BIRD tables.
protocol kernel {
#	learn;			# Learn all alien routes from the kernel
	persist;		# Don't remove routes on bird shutdown
	scan time 20;		# Scan kernel routing table every 20 seconds
	import none;		# Default is import all
	export all;		# Default is export none
#	kernel table 5;		# Kernel table to synchronize with (default: main)
}

# This pseudo-protocol watches all interface up/down events.
protocol device {
	scan time 10;		# Scan interfaces every 10 seconds
}

# Static routes (again, there can be multiple instances, so that you
# can disable/enable various groups of static routes on the fly).
protocol static {
#	disabled;		# Disable by default
#	table testable;		# Connect to a non-default table
#	preference 1000;	# Default preference of routes
#	debug { states, routes, filters, interfaces, events, packets };
#	debug all;
#	route 0.0.0.0/0 via 198.51.100.13;
#	route 198.51.100.0/25 unreachable;
#	route 10.0.0.0/8 unreachable;
#	route 10.1.1.0:255.255.255.0 via 198.51.100.3;
#	route 10.1.2.0:255.255.255.0 via 198.51.100.3;
#	route 10.1.3.0:255.255.255.0 via 198.51.100.4;
#	route 10.2.0.0/24 via "arc0";
}

protocol ospf SNSOSPF {
	preference 50;
        import all;
        export none;

	ecmp on;

        area 0.0.0.0 {

                interface "etbrcollegio" {
                        type broadcast;
                        cost 20;
                };

                interface "etbrpubblica" {
                        type broadcast;
                        cost 50;
                };

                interface "etbraula" {
                        type broadcast;
                        cost 10;
			stub;
                };

                interface "etbrvirt" {
                        type broadcast;
                        cost 10;
			stub;
                };

        };

}


